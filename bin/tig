#!/bin/bash
#
# This is the main tig script which acts as a proxy to the lower level tig scripts

set -e
OPTIND=1

CONFIG_PATH=$HOME/.tigrc
if [ -f "$CONFIG_PATH" ] ; then
  # Install required dependencies with init flag
  tig-install -ir
  . $CONFIG_PATH
fi

usage_short="${CYAN}Usage: tig <command> <opts>${NC}"

usage_long="$usage_short\n--commands--"
usage_long="$usage_long\n\tinstall: initializes and installs required / optional tig components."
usage_long="$usage_long\n\tlogin: authorize with the tig api."
usage_long="$usage_long\n\tconfig: configure your tig settings."
usage_long="$usage_long\n\ttrack: control the repos, scripts and dot files you are tracking."
usage_long="$usage_long\n\tmesh: synchronize your tracked repositories on your machine."
usage_long="$usage_long\n\tstatus: get status and version info for your tracked repositories."
usage_long="$usage_long\n\tpublish: publish repositories to GitHub and npm with options for annotated versioning."
usage_long="$usage_long\n\tbuild: Mesh and build one of your tracked repositories."
usage_long="$usage_long\n\trun: Mesh, build, and execute one of your tracked repositories or scripts on your local machine."
usage_long="$usage_long\n\tdeploy: Mesh, build, compress, and deploy artifacts to artifacts directory and cloud services."

usage_short="$usage_short\nUse -h to get supported command information."

if [ "$#" == "0" ] ; then
  >&2 echo "$usage_short"
  exit 1
fi


command=$1
shift

options=":h"

### Command line flags
while getopts "$options" opt; do
    case "$opt" in
    h )
      >&2 echo -e "$usage_long" && exit 1
      exit 0
      ;;
    \?)
      >&2 echo -e "Unknown option: -$OPTARG"
      >&2 echo -e "$usage_short"
      exit 1
      ;;
    : )
      >&2 echo -e "Missing option argument for -$OPTARG"
      >&2 echo -e "$usage_short"
      exit 1
      ;;
    * )
      >&2 echo -e "Unimplemented option: -$OPTARG" && exit 1
      >&2 echo -e "$usage_short"
      exit 1
    esac
done

tig-${command} "$@"
